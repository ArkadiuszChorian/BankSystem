//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    public partial class User : object
    {
        
        private System.Collections.Generic.List<string> AccountsField;
        
        private string IdField;
        
        private string PasswordField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Accounts
        {
            get
            {
                return this.AccountsField;
            }
            set
            {
                this.AccountsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operation", Namespace="http://schemas.datacontract.org/2004/07/Service.Models")]
    public partial class Operation : object
    {
        
        private decimal AmountField;
        
        private decimal BalanceAfterField;
        
        private decimal BalanceBeforeField;
        
        private string DestinationIdField;
        
        private string IdField;
        
        private string SourceIdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount
        {
            get
            {
                return this.AmountField;
            }
            set
            {
                this.AmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceAfter
        {
            get
            {
                return this.BalanceAfterField;
            }
            set
            {
                this.BalanceAfterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceBefore
        {
            get
            {
                return this.BalanceBeforeField;
            }
            set
            {
                this.BalanceBeforeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationId
        {
            get
            {
                return this.DestinationIdField;
            }
            set
            {
                this.DestinationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceId
        {
            get
            {
                return this.SourceIdField;
            }
            set
            {
                this.SourceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankService.IBankService")]
    public interface IBankService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AuthenticateUser", ReplyAction="http://tempuri.org/IBankService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/RegisterUser", ReplyAction="http://tempuri.org/IBankService/RegisterUserResponse")]
        System.Threading.Tasks.Task<string> RegisterUserAsync(BankService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CreateAccount", ReplyAction="http://tempuri.org/IBankService/CreateAccountResponse")]
        System.Threading.Tasks.Task<string> CreateAccountAsync(BankService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/Transfer", ReplyAction="http://tempuri.org/IBankService/TransferResponse")]
        System.Threading.Tasks.Task<string> TransferAsync(BankService.Operation operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/Payment", ReplyAction="http://tempuri.org/IBankService/PaymentResponse")]
        System.Threading.Tasks.Task<string> PaymentAsync(BankService.Operation operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetHistory", ReplyAction="http://tempuri.org/IBankService/GetHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BankService.Operation>> GetHistoryAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/RetrieveTransfer", ReplyAction="http://tempuri.org/IBankService/RetrieveTransferResponse")]
        System.Threading.Tasks.Task<string> RetrieveTransferAsync(BankService.Operation operation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    public interface IBankServiceChannel : BankService.IBankService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    public partial class BankServiceClient : System.ServiceModel.ClientBase<BankService.IBankService>, BankService.IBankService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BankServiceClient() : 
                base(BankServiceClient.GetDefaultBinding(), BankServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBankService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BankServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(BankServiceClient.GetBindingForEndpoint(endpointConfiguration), BankServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BankServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BankServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BankServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BankServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BankServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string userName, string password)
        {
            return base.Channel.AuthenticateUserAsync(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterUserAsync(BankService.User user)
        {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<string> CreateAccountAsync(BankService.User user)
        {
            return base.Channel.CreateAccountAsync(user);
        }
        
        public System.Threading.Tasks.Task<string> TransferAsync(BankService.Operation operation)
        {
            return base.Channel.TransferAsync(operation);
        }
        
        public System.Threading.Tasks.Task<string> PaymentAsync(BankService.Operation operation)
        {
            return base.Channel.PaymentAsync(operation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BankService.Operation>> GetHistoryAsync(string accountId)
        {
            return base.Channel.GetHistoryAsync(accountId);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveTransferAsync(BankService.Operation operation)
        {
            return base.Channel.RetrieveTransferAsync(operation);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBankService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBankService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/Service/BankService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BankServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBankService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BankServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBankService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBankService,
        }
    }
}
